-- 실습 문제 --
-- 도서관리 프로그램을 만들기 위한 테이블들 만들기 --
-- 이때, 제약조건에 이름을 부여할것
-- 각 컬럼에 주석 달기

-- 1. 출판사들에 대한 데이터를 담기 위한 출판사 테이블 (TB_PUBLISHER)
-- 컬럼 : PUB_NO (출판사번호) -- 기본키 (PUBLISHER_PK)
--        PUB_NAME (출판사명) -- NOT NULL (PUBLISHER_NN)
--        PHONE (출판사전화번호) -- 제약조건 없음

CREATE TABLE TB_PUBLISHER (
     PUB_NO NUMBER CONSTRAINT PUBLISHER_PK  PRIMARY KEY ,
     PUB_NAME VARCHAR2(20) CONSTRAINT PUBLISHER_NN NOT NULL ,
     PHONE VARCHAR2(15)
);
--주석 달기
COMMENT ON COLUMN TB_PUBLISHER.PUB_NO IS '출판사번호';
COMMENT ON COLUMN TB_PUBLISHER.PUB_NAME IS '출판사명';
COMMENT ON COLUMN TB_PUBLISHER.PHONE IS '출판사전화번호';
-- 3개 정도의 샘플 데이터 추가하기
INSERT INTO TB_PUBLISHER
VALUES( 1, '북출판사','02-1111-2222');
INSERT INTO TB_PUBLISHER
VALUES( 2, '책출판사','02-2222-3333');
INSERT INTO TB_PUBLISHER
VALUES( 3, '읽자출판사','02-3333-4444');
SELECT * FROM TB_PUBLISHER;

-- 2. 도서들에 대한 데이터를 담기 위한 도서 테이블 (TB_BOOK)
-- 컬럼 : BK_NO (도서번호) -- 기본키 (BOOK_PK)
--        BK_TITLE (도서명) -- NOT NULL (BOOK_NN_TITLE)
--        BK_AUTHOR (저자명) -- NOT NULL (BOOK_NN_AUTHOR)
--        BK_PRICE (가격)
--        BK_PUB_NO (출판사번호) -- 외래키(BOOK_FK) (TB_PUBLISHER 테이블을 참조하도록)
--                                 이 때, 참조하고 있는 부모데이터 삭제 시 자식 데이터도 삭제 되도록 한다.
CREATE TABLE TB_BOOK (
     BK_NO NUMBER CONSTRAINT BOOK_PK  PRIMARY KEY, --기본키
     BK_TITLE VARCHAR2(30) CONSTRAINT BOOK_NN_TITLE NOT NULL ,
     BK_AUTHOR VARCHAR2(20) CONSTRAINT BOOK_NN_AUTHOR NOT NULL ,
     BK_PRICE NUMBER ,
     BK_PUB_NO NUMBER  CONSTRAINT BOOK_FK 
     REFERENCES  TB_PUBLISHER(PUB_NO)  ON DELETE CASCADE  --외래키
);
--주석달기
COMMENT ON COLUMN TB_BOOK.BK_NO IS '도서번호';
COMMENT ON COLUMN TB_BOOK.BK_TITLE IS '도서명';
COMMENT ON COLUMN TB_BOOK.BK_AUTHOR IS '저자명';
COMMENT ON COLUMN TB_BOOK.BK_PRICE IS '가격';
COMMENT ON COLUMN TB_BOOK.BK_PUB_NO IS '출판사번호';
-- 5개 정도의 샘플 데이터 추가하기
INSERT INTO  TB_BOOK
VALUES( 1, '가불선진국','조국',16000,1);

INSERT INTO TB_BOOK
VALUES(2,'불편한편의점','김호연',14000,2);

INSERT INTO  TB_BOOK
VALUES(3,'나에게고맙다','전승환',16000,3);

INSERT INTO TB_BOOK
VALUES(4,'아몬드','손원평',12000,1);

INSERT INTO  TB_BOOK
VALUES(5,'긴긴밤','루리',11500,2);

SELECT * FROM TB_BOOK;

-- 3. 회원에 대한 데이터를 담기 위한 회원 테이블 (TB_MEMBER)
-- 컬럼명 : MEMBER_NO (회원번호) -- 기본키 (MEMBER_PK)
--         MEMBER_ID (아이디) -- 중복금지 (MEMBER_UQ)
--         MEMBER_PWD (비밀번호) -- NOT NULL (MEMBER_NN_PWD)
--         MEMBER_NAME (회원명) -- NOT NULL (MEMBER_NN_NAME)
--         GENDER (성별) -- 'M' 또는 'F' 로 입력되도록 제한 (MEMBER_CK_GEN)
--         ADDRESS (주소)
--         PHONE (연락처)
--         STATUS (탈퇴여부) -- 기본값으로 'N' 으로 지정, 그리고 'Y' 혹은 'N' 으로만 입력되도록 제약조건 (MEMBER_CK_ST)
--         ENROLL_DATE (가입일) -- 기본값으로 SYSDATE, NOT NULL 제약조건 (MEMBER_NN_EN)
CREATE TABLE TB_MEMBER (
     MEMBER_NO NUMBER CONSTRAINT MEMBER_PK  PRIMARY KEY,
     MEMBER_ID VARCHAR2(20) CONSTRAINT MEMBER_UQ NOT NULL ,
     MEMBER_PWD  VARCHAR2(20) CONSTRAINT MEMBER_NN_PWD NOT NULL ,
     MEMBER_NAME  VARCHAR2(20)  CONSTRAINT MEMBER_NN_NAME NOT NULL,
     GENDER CHAR(3)  CONSTRAINT MEMBER_CK_GEN CHECK (GENDER IN ('M', 'F')) ,
     ADDRESS VARCHAR2(30),
     PHONE VARCHAR2(15),
     STATUS CHAR(1) DEFAULT 'N' CONSTRAINT MEMBER_CK_ST CHECK (STATUS IN ('Y','N')), 
     ENROLL_DATE DATE DEFAULT SYSDATE CONSTRAINT MEM_NN_EN NOT NULL
);
--주석달기
COMMENT ON COLUMN TB_MEMBER.MEMBER_NO IS '회원번호';
COMMENT ON COLUMN TB_MEMBER.MEMBER_ID IS '아이디';
COMMENT ON COLUMN TB_MEMBER.MEMBER_PWD IS '비밀번호';
COMMENT ON COLUMN TB_MEMBER.MEMBER_NAME IS '회원명';
COMMENT ON COLUMN TB_MEMBER.GENDER IS '성별';
COMMENT ON COLUMN TB_MEMBER.ADDRESS IS '주소';
COMMENT ON COLUMN TB_MEMBER.PHONE  IS '연락처';
COMMENT ON COLUMN TB_MEMBER.STATUS IS '탈퇴여부';
COMMENT ON COLUMN TB_MEMBER.ENROLL_DATE IS '가입일';

-- 5개 정도의 샘플 데이터 추가하기
INSERT INTO  TB_MEMBER
VALUES( 1, 'user01','1111','선동일','M','서울시1','02-1111-1111','N','01/03/09');

INSERT INTO  TB_MEMBER
VALUES( 2, 'user02','2222','송종기','M','서울시2','02-2222-2222','N',SYSDATE);

INSERT INTO  TB_MEMBER
VALUES( 3, 'user03','3333','노옹철','M','서울시3','02-3333-3333','Y','20/03/28');

INSERT INTO  TB_MEMBER
VALUES( 4, 'user04','4444','송은희','F','서울시4','02-4444-4444','N',SYSDATE);

INSERT INTO  TB_MEMBER
VALUES( 5, 'user05','5555','유재식','M','서울시5','02-5555-5555','N',DEFAULT);

SELECT * FROM TB_MEMBER;
-- 4. 어떤 회원이 어떤 도서를 대여했는지에 대한 대여목록 테이블 (TB_RENT)
-- 컬럼 : RENT_NO (대여번호) -- 기본키 (RENT_PK)
--        RENT_MEM_NO (대여회원번호) -- 외래키 (RENT_FK_MEM) TB_MEMBER 와 참조하도록
--                                    이 때, 부모 데이터 삭제 시 자식 데이터 값이 NULL 이 되도록 옵션 설정
--        RENT_BOOK_NO (대여도서번호) -- DHLFOZL (RENT_FK_BOOK) TB_BOOK 와 참조하도록
--                                     이 때, 부모 데이터 삭제 시 자식 데이터 값이 NULL 값이 되도록 옵션 설정
--        RENT_DATE (대여일) -- 기본값 SYSDATE
--4번
CREATE TABLE TB_RENT (
     RENT_NO NUMBER CONSTRAINT RENT_PK  PRIMARY KEY,
     RENT_MEM_NO NUMBER ,
     RENT_BOOK_NO NUMBER,  
     RENT_DATE DATE DEFAULT SYSDATE,
     CONSTRAINT RENT_FK_MEM FOREIGN KEY (RENT_MEM_NO) REFERENCES TB_MEMBER(MEMBER_NO) ON DELETE SET NULL, 
     CONSTRAINT RENT_FK_BOOK FOREIGN KEY (RENT_BOOK_NO) REFERENCES TB_BOOK(BK_NO) ON DELETE SET NULL
);    --NULL되도록  FOREIGN KEY삭제 (테이블방식으로) 
--주석달기
COMMENT ON COLUMN TB_RENT. RENT_NO IS '대여번호';
COMMENT ON COLUMN TB_RENT. RENT_MEM_NO IS '대여회원번호';
COMMENT ON COLUMN TB_RENT. RENT_BOOK_NO IS '대여도서번호';
COMMENT ON COLUMN TB_RENT. RENT_DATE IS '대여일';
-- 3개 정도의 샘플 데이터 추가하기
INSERT INTO  TB_RENT
VALUES( 1, 1, 1, SYSDATE);

INSERT INTO  TB_RENT
VALUES( 2, 2, 2, DEFAULT);

INSERT INTO  TB_RENT
VALUES( 3, 3, 3, '21/01/01');

INSERT INTO  TB_RENT
VALUES( 4, 4, 4, SYSDATE);

SELECT * FROM TB_RENT;
